{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","App.js","index.js"],"names":["TodoItem","id","title","completed","onComplete","onRemoveItem","className","type","onChange","htmlFor","onClick","TodoList","todos","filter","onRemove","todo","window","console","log","map","key","TodosFilter","onFilter","href","App","state","currentId","handleSubmit","event","preventDefault","trim","newTodo","setState","handleTitleChange","target","value","handleCompleteChange","checked","result","handleFilter","handleClearCompleted","handleRemoveItem","this","onSubmit","placeholder","length","undefined","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a621edcc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ id, title, completed, onComplete, onRemoveItem }) => (\n  <li className={completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={id}\n        onChange={onComplete}\n      />\n      <label htmlFor=\"todo-1\">{title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        id={id}\n        onClick={onRemoveItem}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  onComplete: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onRemoveItem: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, filter, onComplete, onRemove }) => (\n  <ul className=\"todo-list\">\n    {todos\n      .filter((todo) => {\n        window.console.log(`filtering only ${filter}`);\n        switch (filter) {\n          case 'completed':\n            return todo.completed;\n          case 'active':\n            return !todo.completed;\n          case 'all':\n          default:\n            return true;\n        }\n      })\n      .map(todo => (\n        <TodoItem\n          id={todo.id}\n          key={todo.id}\n          title={todo.title}\n          onComplete={onComplete}\n          onRemoveItem={onRemove}\n          completed={todo.completed}\n        />\n      ))\n    }\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      todo: PropTypes.objectOf(),\n    }),\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodosFilter = ({ filter, onFilter }) => (\n\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={filter === 'all' ? 'selected' : ''}\n        onClick={() => onFilter('all')}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={filter === 'active' ? 'selected' : ''}\n        onClick={() => onFilter('active')}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={filter === 'completed' ? 'selected' : ''}\n        onClick={() => onFilter('completed')}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n\n);\n\nTodosFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport TodosFilter from './components/TodosFilter';\n\nclass App extends React.PureComponent {\n  state={\n    todos: [],\n    title: '',\n    filter: 'All',\n    currentId: 1,\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, currentId } = this.state;\n\n    if (!title.trim()) {\n      this.setState({ title: '' });\n\n      return;\n    }\n\n    const newTodo = {\n      title,\n      id: currentId,\n      completed: false,\n    };\n\n    this.setState(state => ({\n      currentId: currentId + 1,\n      todos: [...state.todos, newTodo],\n      title: '',\n    }));\n  }\n\n  handleTitleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  handleCompleteChange = (event) => {\n    const { id, checked } = event.target;\n    const { todos } = this.state;\n\n    this.setState({\n      todos: todos.map((todo) => {\n        if (todo.id === +id) {\n          const result = { ...todo };\n\n          result.completed = checked;\n\n          return result;\n        }\n\n        return todo;\n      }),\n    });\n  }\n\n  handleFilter = (filter) => {\n    this.setState({ filter });\n  }\n\n  handleClearCompleted = () => {\n    this.setState(({ todos }) => ({\n      todos: todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  handleRemoveItem = (event) => {\n    const { id } = event.target;\n\n    this.setState(({ todos }) => ({\n      todos: todos.filter(todo => todo.id !== +id),\n    }));\n  }\n\n  render() {\n    const { filter } = this.state.filter;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleTitleChange}\n              value={this.state.title}\n            />\n          </form>\n\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          {this.state.todos\n          && (\n            <TodoList\n              todos={this.state.todos}\n              filter={this.state.filter}\n              onComplete={this.handleCompleteChange}\n              onRemove={this.handleRemoveItem}\n            />\n          )}\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {this.state.todos.filter(todo => !todo.completed).length}\n            items left\n          </span>\n          <TodosFilter\n            onFilter={this.handleFilter}\n            filter={filter !== undefined ? filter : ''}\n          />\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.handleClearCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}