{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","App.js","index.js"],"names":["TodoItem","id","title","completed","onTaskCompleted","onRemoveItem","className","type","checked","onChange","htmlFor","onClick","TodoList","todos","onRemove","map","todo","key","TodosFilter","filter","onFilter","href","App","state","currentId","handleSubmit","event","preventDefault","trim","newTodo","setState","handleTitleChange","target","value","handleCompletedChange","result","handleFilter","handleClearCompleted","handleRemoveItem","toggleAllTodosStatus","this","filteredTodos","onSubmit","placeholder","length","undefined","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a926e170.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ id, title, completed, onTaskCompleted, onRemoveItem }) => (\n  <li className={completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={id}\n        checked={completed}\n        onChange={onTaskCompleted}\n      />\n      <label htmlFor=\"todo-1\">{title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        id={id}\n        onClick={onRemoveItem}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  onTaskCompleted: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onRemoveItem: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, onTaskCompleted, onRemove }) => (\n  <ul className=\"todo-list\">\n    {todos\n      .map(todo => (\n        <TodoItem\n          id={todo.id}\n          key={todo.id}\n          title={todo.title}\n          onTaskCompleted={onTaskCompleted}\n          onRemoveItem={onRemove}\n          completed={todo.completed}\n        />\n      ))\n    }\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      todo: PropTypes.objectOf(\n        PropTypes.shape({\n          title: PropTypes.string.isRequired,\n          id: PropTypes.string.isRequired,\n        }),\n      ),\n    }),\n  ).isRequired,\n  onTaskCompleted: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodosFilter = ({ filter, onFilter }) => (\n\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={filter === 'all' ? 'selected' : ''}\n        onClick={() => onFilter('all')}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={filter === 'active' ? 'selected' : ''}\n        onClick={() => onFilter('active')}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={filter === 'completed' ? 'selected' : ''}\n        onClick={() => onFilter('completed')}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n\n);\n\nTodosFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport TodosFilter from './components/TodosFilter';\n\nclass App extends React.PureComponent {\n  state={\n    todos: [],\n    title: '',\n    filter: 'All',\n    currentId: 1,\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, currentId } = this.state;\n\n    if (!title.trim()) {\n      this.setState({ title: '' });\n\n      return;\n    }\n\n    const newTodo = {\n      title,\n      id: currentId,\n      completed: false,\n    };\n\n    this.setState(state => ({\n      currentId: currentId + 1,\n      todos: [...state.todos, newTodo],\n      title: '',\n    }));\n  }\n\n  handleTitleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  handleCompletedChange = (event) => {\n    const { id, checked } = event.target;\n    const { todos } = this.state;\n\n    this.setState({\n      todos: todos.map((todo) => {\n        if (todo.id === +id) {\n          const result = { ...todo };\n\n          result.completed = checked;\n\n          return result;\n        }\n\n        return todo;\n      }),\n    });\n  }\n\n  handleFilter = (filter) => {\n    this.setState({ filter });\n  }\n\n  handleClearCompleted = () => {\n    this.setState(({ todos }) => ({\n      todos: todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  handleRemoveItem = (event) => {\n    const { id } = event.target;\n\n    this.setState(({ todos }) => ({\n      todos: todos.filter(todo => todo.id !== +id),\n    }));\n  }\n\n  toggleAllTodosStatus = (event) => {\n    const { checked } = event.target;\n\n    if (event.target !== null) {\n      this.setState(({ todos }) => ({\n        todos: todos.map(todo => ({\n          ...todo,\n          completed: checked,\n        })),\n      }));\n    }\n  }\n\n  render() {\n    const { filter, title, todos } = this.state;\n\n    const filteredTodos = todos.filter((todo) => {\n      switch (filter) {\n        case 'completed':\n          return todo.completed;\n        case 'active':\n          return !todo.completed;\n        case 'all':\n        default:\n          return true;\n      }\n    });\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleTitleChange}\n              value={title}\n            />\n          </form>\n\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            // checked={todos.every(todo => todo.checked)}\n            onChange={this.toggleAllTodosStatus}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          {this.state.todos\n          && (\n            <TodoList\n              todos={filteredTodos}\n              filter={filter}\n              onTaskCompleted={this.handleCompletedChange}\n              onRemove={this.handleRemoveItem}\n            />\n          )}\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {this.state.todos.filter(todo => !todo.completed).length}\n            items left\n          </span>\n          <TodosFilter\n            onFilter={this.handleFilter}\n            filter={filter !== undefined ? filter : ''}\n          />\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.handleClearCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}