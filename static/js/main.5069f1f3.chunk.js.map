{"version":3,"sources":["components/TodoList.js","App.js","index.js"],"names":["TodoList","todos","onComplete","className","map","todo","key","id","type","onChange","htmlFor","title","App","state","currentId","handleSubmit","event","preventDefault","newTodo","completed","setState","handleTitleChange","target","value","handleCompleteChange","checked","result","onSubmit","this","placeholder","filter","length","href","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"oQAgEeA,EA7DE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACf,wBAAIC,UAAU,aACXF,EAAMG,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACZ,yBAAKJ,UAAU,QACb,2BACEK,KAAK,WACLL,UAAU,SACVI,GAAIF,EAAKE,GACTE,SAAUP,IAEZ,2BAAOQ,QAAQ,UAAUL,EAAKM,OAC9B,4BAAQH,KAAK,SAASL,UAAU,aAElC,2BAAOK,KAAK,OAAOL,UAAU,eC+FtBS,E,4MA5GbC,MAAM,CACJZ,MAAO,GACPU,MAAO,GACPG,UAAW,G,EAGbC,aAAe,SAACC,GACdA,EAAMC,iBADkB,MAGK,EAAKJ,MAA1BF,EAHgB,EAGhBA,MAAOG,EAHS,EAGTA,UAEf,GAAc,KAAVH,EAAJ,CAKA,IAAMO,EAAU,CACdP,QACAJ,GAAIO,EACJK,WAAW,GAGb,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBC,UAAWA,EAAY,EACvBb,MAAM,GAAD,mBAAMY,EAAMZ,OAAZ,CAAmBiB,IACxBP,MAAO,S,EAIXU,kBAAoB,SAACL,GACnB,EAAKI,SAAS,CACZT,MAAOK,EAAMM,OAAOC,S,EAIxBC,qBAAuB,SAACR,GAAW,IAAD,EACRA,EAAMM,OAAtBf,EADwB,EACxBA,GAAIkB,EADoB,EACpBA,QACJxB,EAAU,EAAKY,MAAfZ,MAER,EAAKmB,SAAS,CACZnB,MAAOA,EAAMG,KAAI,SAACC,GAChB,GAAIA,EAAKE,MAAQA,EAAI,CACnB,IAAMmB,EAAM,eAAQrB,GAIpB,OAFAqB,EAAOP,UAAYM,EAEZC,EAGT,OAAOrB,Q,uDAMX,OACE,6BAASF,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCACA,0BAAMwB,SAAUC,KAAKb,cACnB,2BACEZ,UAAU,WACV0B,YAAY,yBACZpB,SAAUmB,KAAKP,kBACfE,MAAOK,KAAKf,MAAMF,UAMxB,6BAASR,UAAU,QACjB,2BAAOK,KAAK,WAAWD,GAAG,aAAaJ,UAAU,eACjD,2BAAOO,QAAQ,cAAf,wBACA,kBAAC,EAAD,CACET,MAAO2B,KAAKf,MAAMZ,MAClBC,WAAY0B,KAAKJ,wBAIrB,4BAAQrB,UAAU,UAChB,0BAAMA,UAAU,cACbyB,KAAKf,MAAMZ,MAAM6B,QAAO,SAAAzB,GAAI,OAAKA,EAAKc,aAAWY,OADpD,cAKA,wBAAI5B,UAAU,WACZ,4BACE,uBAAG6B,KAAK,KAAK7B,UAAU,YAAvB,QAGF,4BACE,uBAAG6B,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQxB,KAAK,SAASL,UAAU,mBAAhC,yB,GApGQ8B,IAAMC,eCGxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5069f1f3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, onComplete }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li key={todo.id}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={todo.id}\n            onChange={onComplete}\n          />\n          <label htmlFor=\"todo-1\">{todo.title}</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    ))\n    }\n    {/* <li>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" />\n          <label htmlFor=\"todo-1\">asdfghj</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li className=\"completed\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" id=\"todo-2\" />\n          <label htmlFor=\"todo-2\">qwertyuio</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li className=\"editing\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n          <label htmlFor=\"todo-3\">zxcvbnm</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" id=\"todo-4\" />\n          <label htmlFor=\"todo-4\">1234567890</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li> */}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.objectOf().isRequired,\n  onComplete: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from './components/TodoList';\n\nclass App extends React.PureComponent {\n  state={\n    todos: [],\n    title: '',\n    currentId: 1,\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, currentId } = this.state;\n\n    if (title === '') {\n      // add error handling\n      return;\n    }\n\n    const newTodo = {\n      title,\n      id: currentId,\n      completed: false,\n    };\n\n    this.setState(state => ({\n      currentId: currentId + 1,\n      todos: [...state.todos, newTodo],\n      title: '',\n    }));\n  }\n\n  handleTitleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  handleCompleteChange = (event) => {\n    const { id, checked } = event.target;\n    const { todos } = this.state;\n\n    this.setState({\n      todos: todos.map((todo) => {\n        if (todo.id === +id) {\n          const result = { ...todo };\n\n          result.completed = checked;\n\n          return result;\n        }\n\n        return todo;\n      }),\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleTitleChange}\n              value={this.state.title}\n            />\n          </form>\n\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            todos={this.state.todos}\n            onComplete={this.handleCompleteChange}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {this.state.todos.filter(todo => !todo.completed).length}\n            items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}